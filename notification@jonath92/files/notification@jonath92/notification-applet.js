var notificationApplet;(()=>{"use strict";var __webpack_modules__={447:(__unused_webpack_module,exports)=>{eval("var __webpack_unused_export__;\n\n__webpack_unused_export__ = true;\nvar _a = imports.gi.St, BoxLayout = _a.BoxLayout, Bin = _a.Bin, Side = _a.Side;\nvar _b = imports.ui.main, uiGroup = _b.uiGroup, layoutManager = _b.layoutManager, panelManager = _b.panelManager, pushModal = _b.pushModal, popModal = _b.popModal;\nvar KEY_Escape = imports.gi.Clutter.KEY_Escape;\nvar util_get_transformed_allocation = imports.gi.Cinnamon.util_get_transformed_allocation;\nvar PanelLoc = imports.ui.popupMenu.PanelLoc;\nfunction createPopupMenu(args) {\n    var launcher = args.launcher;\n    var box = new BoxLayout({\n        style_class: 'popup-menu-content',\n        vertical: true,\n        visible: false\n    });\n    // only for styling purposes\n    var bin = new Bin({\n        style_class: 'menu',\n        child: box,\n        visible: false\n    });\n    uiGroup.add_child(bin);\n    box.connect('key-press-event', function (actor, event) {\n        event.get_key_symbol() === KEY_Escape && close();\n    });\n    launcher.connect('queue-relayout', function () {\n        if (!box.visible)\n            return;\n        setTimeout(function () {\n            setLayout();\n        }, 0);\n    });\n    bin.connect('queue-relayout', function () {\n        if (!box.visible)\n            return;\n        setTimeout(function () {\n            setLayout();\n        }, 0);\n    });\n    function setLayout() {\n        var freeSpace = calculateFreeSpace();\n        var maxHeight = calculateMaxHeight(freeSpace);\n        box.style = \"max-height: \" + maxHeight + \"px;\";\n        var _a = calculatePosition(maxHeight, freeSpace), xPos = _a[0], yPos = _a[1];\n        // Without Math.floor, the popup menu gets for some reason blurred on some themes (e.g. Adapta Nokto)!\n        bin.set_position(Math.floor(xPos), Math.floor(yPos));\n    }\n    function calculateFreeSpace() {\n        var _a, _b, _c, _d;\n        var monitor = layoutManager.findMonitorForActor(launcher);\n        var visiblePanels = panelManager.getPanelsInMonitor(monitor.index);\n        var panelSizes = new Map(visiblePanels.map(function (panel) {\n            var width = 0, height = 0;\n            if (panel.getIsVisible()) {\n                width = panel.actor.width;\n                height = panel.actor.height;\n            }\n            return [panel.panelPosition, { width: width, height: height }];\n        }));\n        return {\n            left: monitor.x + (((_a = panelSizes.get(PanelLoc.left)) === null || _a === void 0 ? void 0 : _a.width) || 0),\n            bottom: monitor.y + monitor.height - (((_b = panelSizes.get(PanelLoc.bottom)) === null || _b === void 0 ? void 0 : _b.height) || 0),\n            top: monitor.y + (((_c = panelSizes.get(PanelLoc.top)) === null || _c === void 0 ? void 0 : _c.height) || 0),\n            right: monitor.x + monitor.width - (((_d = panelSizes.get(PanelLoc.right)) === null || _d === void 0 ? void 0 : _d.width) || 0)\n        };\n    }\n    function calculateMaxHeight(freeSpace) {\n        var freeSpaceHeight = (freeSpace.bottom - freeSpace.top) / global.ui_scale;\n        var boxThemeNode = box.get_theme_node();\n        var binThemeNode = bin.get_theme_node();\n        var paddingTop = boxThemeNode.get_padding(Side.TOP);\n        var paddingBottom = boxThemeNode.get_padding(Side.BOTTOM);\n        var borderWidthTop = binThemeNode.get_border_width(Side.TOP);\n        var borderWidthBottom = binThemeNode.get_border_width(Side.BOTTOM);\n        var maxHeight = freeSpaceHeight - paddingBottom - paddingTop - borderWidthTop - borderWidthBottom;\n        return maxHeight;\n    }\n    function calculatePosition(maxHeight, freeSpace) {\n        var appletBox = util_get_transformed_allocation(launcher);\n        var _a = box.get_preferred_size(), minWidth = _a[0], minHeight = _a[1], natWidth = _a[2], natHeight = _a[3];\n        var margin = (natWidth - appletBox.get_width()) / 2;\n        var xLeftNormal = Math.max(freeSpace.left, appletBox.x1 - margin);\n        var xRightNormal = appletBox.x2 + margin;\n        var xLeftMax = freeSpace.right - appletBox.get_width() - margin * 2;\n        var xLeft = (xRightNormal < freeSpace.right) ? xLeftNormal : xLeftMax;\n        var yTopNormal = Math.max(appletBox.y1, freeSpace.top);\n        var yBottomNormal = yTopNormal + natHeight;\n        var yTopMax = freeSpace.bottom - box.height;\n        var yTop = (yBottomNormal < freeSpace.bottom) ? yTopNormal : yTopMax;\n        return [xLeft, yTop];\n    }\n    function toggle() {\n        box.visible ? close() : open();\n    }\n    // no idea why it sometimes needs to be bin and sometimes box ...\n    function open() {\n        setLayout();\n        bin.show();\n        box.show();\n        launcher.add_style_pseudo_class('checked');\n        pushModal(box);\n        // For some reason, it is emmited the button-press event when clicking e.g on the desktop but the button-release-event when clicking on another applet\n        global.stage.connect('button-press-event', handleClick);\n        global.stage.connect('button-release-event', handleClick);\n    }\n    function close() {\n        if (!box.visible)\n            return;\n        bin.hide();\n        box.hide();\n        launcher.remove_style_pseudo_class('checked');\n        popModal(box);\n    }\n    function handleClick(actor, event) {\n        if (!box.visible) {\n            return;\n        }\n        var clickedActor = event.get_source();\n        var binClicked = box.contains(clickedActor);\n        var appletClicked = launcher.contains(clickedActor);\n        (!binClicked && !appletClicked) && close();\n    }\n    box.toggle = toggle;\n    // TODO: remove close\n    box.close = close;\n    return box;\n}\nexports.S = createPopupMenu;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///447\n")},981:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"main\": () => (/* binding */ main)\n});\n\n// EXTERNAL MODULE: ./node_modules/cinnamonpopup/index.js\nvar cinnamonpopup = __webpack_require__(447);\n;// CONCATENATED MODULE: ./src/AppletNew.ts\nconst { Applet, AllowedLayout, IconApplet } = imports.ui.applet;\nfunction createApplet(args) {\n    const { orientation, panelHeight, instanceId, } = args;\n    const applet = new IconApplet(orientation, panelHeight, instanceId);\n    applet.set_applet_icon_symbolic_name('empty-notif');\n    return applet;\n}\n\n;// CONCATENATED MODULE: ./src/CreateNotification.ts\nconst { Button, Table, BoxLayout, Label, Bin } = imports.gi.St;\nconst { WrapMode } = imports.gi.Pango;\nfunction createNotification(args) {\n    const { title, body } = args;\n    const button = new Button({\n        style_class: 'notification-applet-padding',\n    });\n    const table = new Table({\n        name: 'notification',\n        reactive: true\n    });\n    button.set_child(table);\n    const titleLabel = new Label();\n    titleLabel.clutter_text.line_wrap = true;\n    titleLabel.clutter_text.line_wrap_mode = WrapMode.WORD_CHAR;\n    table.add(titleLabel, {\n        row: 0,\n        col: 1,\n    });\n    titleLabel.clutter_text.set_markup(`<b>${title}</b>`);\n    const contentLabel = new Label();\n    contentLabel.clutter_text.set_markup(body);\n    table.add(contentLabel, {\n        row: 1,\n        col: 1\n    });\n    return button;\n}\n\n;// CONCATENATED MODULE: ./src/CreateNotificationContainer.ts\nconst { BoxLayout: CreateNotificationContainer_BoxLayout, ScrollView, Align } = imports.gi.St;\nconst { PolicyType } = imports.gi.Gtk;\nfunction createNotificationContainer() {\n    const container = new CreateNotificationContainer_BoxLayout({\n        vertical: true\n    });\n    const scrollView = new ScrollView({\n        x_fill: true,\n        y_fill: true,\n        y_align: Align.START,\n        style_class: \"vfade\",\n        hscrollbar_policy: PolicyType.NEVER,\n        vscrollbar_policy: PolicyType.AUTOMATIC,\n    });\n    const box = new CreateNotificationContainer_BoxLayout({\n        vertical: true\n    });\n    container.add_actor(scrollView);\n    scrollView.add_actor(box);\n    //container.add_child = box.add_child\n    // @ts-ignore\n    container.dummy = function () {\n        global.log('dummy');\n    };\n    return {\n        /** the container which should be used to add it as child to a parent Actor */\n        actor: container,\n        /** the container which should be used to add children  */\n        box\n    };\n}\n\n;// CONCATENATED MODULE: ./src/index.ts\n\n\n\n\nconst { BoxLayout: src_BoxLayout, Label: src_Label, Table: src_Table, Button: src_Button, Bin: src_Bin, Icon, IconType, Align: src_Align, ScrollView: src_ScrollView } = imports.gi.St;\nconst { NOTIFICATION } = imports.gi.Atk.Role;\nconst { PolicyType: src_PolicyType } = imports.gi.Gtk;\nconst { WrapMode: src_WrapMode } = imports.gi.Pango;\nfunction main(args) {\n    const { orientation, panelHeight, instanceId } = args;\n    const applet = createApplet({\n        orientation,\n        instanceId,\n        panelHeight\n    });\n    const popupMenu = (0,cinnamonpopup/* createPopupMenu */.S)({ launcher: applet.actor });\n    const notificationContainer = createNotificationContainer();\n    popupMenu.add_actor(notificationContainer.actor);\n    applet.on_applet_clicked = () => {\n        // const notificiaton = new Notification('Title', 'Body')\n        // _notificationBin.add_child(notificiaton.actor)\n        const notification = createNotification({\n            title: 'My Title',\n            body: 'Body'\n        });\n        notificationContainer.box.add_child(notification);\n        //@ts-ignore\n        notificationContainer.actor.dummy();\n        popupMenu.toggle();\n    };\n    // const _maincontainer = new BoxLayout({\n    //     vertical: true,\n    // })\n    // const scrollView = new ScrollView({\n    //     x_fill: true,\n    //     y_fill: true,\n    //     y_align: Align.START,\n    //     //   style_class: \"vfade\",\n    //     hscrollbar_policy: PolicyType.NEVER,\n    //     vscrollbar_policy: PolicyType.AUTOMATIC\n    // })\n    // const _notificationBin = new BoxLayout({\n    //     vertical: true\n    // })\n    // _maincontainer.add_actor(scrollView)\n    // scrollView.add_actor(_notificationBin)\n    // popupMenu.add_actor(_maincontainer)\n    // const reminderApplet = new NoticiationApplet(orientation, panel_height, instance_id)\n    return applet;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///981\n")}},__webpack_module_cache__={};function __webpack_require__(g){var I=__webpack_module_cache__[g];if(void 0!==I)return I.exports;var n=__webpack_module_cache__[g]={exports:{}};return __webpack_modules__[g](n,n.exports,__webpack_require__),n.exports}__webpack_require__.d=(g,I)=>{for(var n in I)__webpack_require__.o(I,n)&&!__webpack_require__.o(g,n)&&Object.defineProperty(g,n,{enumerable:!0,get:I[n]})},__webpack_require__.o=(g,I)=>Object.prototype.hasOwnProperty.call(g,I),__webpack_require__.r=g=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(981);notificationApplet=__webpack_exports__})();